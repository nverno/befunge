(("COMMAND"
  ("+ (add)"
   "- (subtract)"
   "* (multiply)"
   "/ (divide)"
   "% (modulo)"
   "! (not)"
   "` (greater)"
   "> (right)"
   "< (left)"
   "^ (up)"
   "v (down)"
   "? (random)"
   "_ (horizontal if"
   "| (vertical if)"
   "\" (stringmode)"
   ": (dup)"
   "\ (swap)"
   "$ (pop)"
   ". (pop)"
   ", (pop)"
   "# (bridge)"
   ""
   "g (get)"
   "p (put)"
   "& (input value)"
   "~ (input character)"
   "@ (end)"))

 ("INITIAL STACK (bot->top)"
  ("<value1> <value2>"
   "<value1> <value2>"
   "<value1> <value2>"
   "<value1> <value2>"
   "<value1> <value2>"
   "<value>"
   "<value1> <value2>"
   ""
   ""
   ""
   ""
   ""
   "<boolean value>"
   "<boolean value>"
   ""
   "<value>"
   "<value1> <value2>"
   "<value>"
   "<value>"
   "<value>"
   ""
   "<x> <y>"
   "<value> <x> <y>"
   ""
   ""
   ""))

 ("RESULT (STACK)"
  ("<value1 + value2>"
   "<value1 - value2>"
   "<value1 * value2>"
   "<value1 / value2> (nb. integer)"
   "<value1 mod value2>"
   "<0 if value non-zero, 1 otherwise>"
   "<1 if value1 > value2, 0 otherwise>"
   "PC -> right"
   "PC -> left"
   "PC -> up"
   "PC -> down"
   "PC -> right? left? up? down? ???"
   "PC->left if <value>, else PC->right"
   "PC->up if <value>, else PC->down"
   "Toggles 'stringmode'"
   "<value> <value>"
   "<value2> <value1>"
   "pops <value> but does nothing"
   "outputs <value> as integer"
   "outputs <value> as ASCII"
   "'jumps' PC one farther - skips"
   "over next command"
   "<value at (x,y)>"
   "puts <value> at (x,y)"
   "<value user entered>"
   "<character user entered>"
   "ends program)")))
